# project name and intro
TARGET := FBL
OBJDIR := bin
OBJS :=  $(addprefix $(OBJDIR)/, main.o \
		FBLUser.o FBLUserLL.o \
		FBLPost.o FBLPostLL.o \
		FBLComment.o \
		util.o)
CC := g++
DEBUG := -g
CFLAGS := -Wall -std=c++11 -c $(DEBUG)
LFLAGS := -Wall -std=c++11 $(DEBUG)

# Specifiy the target
all: $(TARGET)

# Specify the object files that the target depends on
# Also specify the object files needed to create the executable
$(TARGET): $(OBJS)
	$(CC) $(LFLAGS) $(OBJS) -o $(TARGET)

# objects
$(OBJS) : | $(OBJDIR)

$(OBJDIR):
	mkdir -p $(OBJDIR)

$(OBJDIR)/main.o: main.cpp FBLUserLL.h util.h
	$(CC) $(CFLAGS) $< -o $@

$(OBJDIR)/FBLUser.o: FBLUser.cpp FBLUser.h util.h
	$(CC) $(CFLAGS) $< -o $@

$(OBJDIR)/FBLUserLL.o: FBLUserLL.cpp FBLUserLL.h util.h
	$(CC) $(CFLAGS) $< -o $@

$(OBJDIR)/FBLPost.o: FBLPost.cpp FBLPost.h util.h
	$(CC) $(CFLAGS) $< -o $@

$(OBJDIR)/FBLPostLL.o: FBLPostLL.cpp FBLPostLL.h util.h
	$(CC) $(CFLAGS) $< -o $@

$(OBJDIR)/FBLComment.o: FBLComment.cpp FBLComment.h util.h
	$(CC) $(CFLAGS) $< -o $@

$(OBJDIR)/util.o: util.cpp util.h
	$(CC) $(CFLAGS) $< -o $@

.PHONY: run and test
# run and test
run:
	./$(TARGET)

test:
	cat test/test_input.txt | ./$(TARGET)

# Specify the object files and executables that are generated
# and need to be removed to re-compile the whole thing
.PHONY: clean
clean:
	rm -f $(OBJS) $(TARGET)
	rm -rf $(OBJDIR)
	# rm -f *.tar.gz

tar:
	tar -czvf projectname.tar.gz *.cpp *.h\
		Makefile README.md *.md *.txt
	mkdir backup.d
	mv project.tar.gz backup.d
